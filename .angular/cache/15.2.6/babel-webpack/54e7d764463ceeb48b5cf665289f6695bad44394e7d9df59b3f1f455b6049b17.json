{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nlet AddComponent = class AddComponent {\n  successNotification() {\n    Swal.fire('Employee added successfully');\n  }\n  constructor(_fb, _empService, http, router) {\n    this._fb = _fb;\n    this._empService = _empService;\n    this.http = http;\n    this.router = router;\n    this.empForm = this._fb.group({\n      name: new FormControl(\"\", [Validators.required]),\n      surname: new FormControl(\"\", [Validators.required]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      contactNo: new FormControl(\"\", [Validators.required, Validators.maxLength(10), Validators.minLength(10)]),\n      department: new FormControl(\"\", [Validators.required])\n    });\n  }\n  ngOnInit() {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n  }\n  get name() {\n    return this.empForm.get('name');\n  }\n  get surname() {\n    return this.empForm.get('surname');\n  }\n  get email() {\n    return this.empForm.get('email');\n  }\n  get contactNumber() {\n    return this.empForm.get('contactNo');\n  }\n  get department() {\n    return this.empForm.get('department');\n  }\n  onFormSubmit() {\n    if (this.empForm.valid) {\n      this._empService.addEmployee(this.empForm.value).subscribe({\n        next: val => {\n          alert(\"Employee added successfully\"), this.empForm.reset();\n        },\n        error: err => {\n          console.error(err);\n        }\n      });\n    }\n  }\n  goToEmployeeList() {\n    this.router.navigate(['/']);\n  }\n};\nAddComponent = __decorate([Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})], AddComponent);\nexport { AddComponent };","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAsBC,WAAW,EAAYC,UAAU,QAAQ,gBAAgB;AAE/E,OAAOC,IAAI,MAAM,aAAa;AASvB,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIzBC,mBAAmB;IACjBF,IAAI,CAACG,IAAI,CAAC,6BAA6B,CAAC;EAC1C;EAOEC,YAAoBC,GAAgB,EAAUC,WAA2B,EAAUC,IAAgB,EAAUC,MAAc;IAAvG,QAAG,GAAHH,GAAG;IAAuB,gBAAW,GAAXC,WAAW;IAA0B,SAAI,GAAJC,IAAI;IAAsB,WAAM,GAANC,MAAM;IACjH,IAAI,CAACC,OAAO,GAAG,IAAI,CAACJ,GAAG,CAACK,KAAK,CAAC;MAC5BC,IAAI,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACa,QAAQ,CAAC,CAAC;MAChDC,OAAO,EAAC,IAAIf,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACa,QAAQ,CAAC,CAAC;MAClDE,KAAK,EAAC,IAAIhB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACa,QAAQ,EAACb,UAAU,CAACe,KAAK,CAAC,CAAE;MAClEC,SAAS,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACiB,SAAS,CAAC,EAAE,CAAC,EAAEjB,UAAU,CAACkB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACzGC,UAAU,EAAC,IAAIpB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACa,QAAQ,CAAC;KACrD,CAAC;EACJ;EAEAO,QAAQ;IACN;IACA;EAAA;EAIF,IAAIR,IAAI;IACN,OAAO,IAAI,CAACF,OAAO,CAACW,GAAG,CAAC,MAAM,CAAC;EACjC;EACA,IAAIP,OAAO;IACT,OAAO,IAAI,CAACJ,OAAO,CAACW,GAAG,CAAC,SAAS,CAAC;EACpC;EACA,IAAIN,KAAK;IACP,OAAO,IAAI,CAACL,OAAO,CAACW,GAAG,CAAC,OAAO,CAAC;EAClC;EACA,IAAIC,aAAa;IACf,OAAO,IAAI,CAACZ,OAAO,CAACW,GAAG,CAAC,WAAW,CAAC;EACtC;EACA,IAAIF,UAAU;IACZ,OAAO,IAAI,CAACT,OAAO,CAACW,GAAG,CAAC,YAAY,CAAC;EACvC;EACAE,YAAY;IACR,IAAG,IAAI,CAACb,OAAO,CAACc,KAAK,EAAC;MACpB,IAAI,CAACjB,WAAW,CAACkB,WAAW,CAAC,IAAI,CAACf,OAAO,CAACgB,KAAK,CAAC,CAACC,SAAS,CAAC;QACzDC,IAAI,EAAGC,GAAQ,IAAI;UACnBC,KAAK,CAAC,6BAA6B,CAAC,EACpC,IAAI,CAACpB,OAAO,CAACqB,KAAK,EAAE;QACpB,CAAC;QAEDC,KAAK,EAAGC,GAAQ,IAAI;UAClBC,OAAO,CAACF,KAAK,CAAEC,GAAG,CAAC;QACrB;OAED,CAAC;;EAKR;EAGAE,gBAAgB;IACd,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;CAID;AAtEYlC,YAAY,eALxBJ,SAAS,CAAC;EACTuC,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWrC,YAAY,CAsExB;SAtEYA,YAAY","names":["Component","FormControl","Validators","Swal","AddComponent","successNotification","fire","constructor","_fb","_empService","http","router","empForm","group","name","required","surname","email","contactNo","maxLength","minLength","department","ngOnInit","get","contactNumber","onFormSubmit","valid","addEmployee","value","subscribe","next","val","alert","reset","error","err","console","goToEmployeeList","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/damacm1140/Desktop/employeeFrontend/src/app/components/add/add.component.ts"],"sourcesContent":["import { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup,Validators } from '@angular/forms';\nimport { ServiceService } from 'src/app/services/service.service';\nimport Swal from 'sweetalert2';\n\n\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit{\n\n\n\nsuccessNotification(){\n  Swal.fire('Employee added successfully')\n}\n\n\n  empForm : FormGroup;\n\n\n\n  constructor(private _fb :FormBuilder, private _empService: ServiceService, private http: HttpClient, private router: Router){\n    this.empForm = this._fb.group({\n      name :new FormControl(\"\", [Validators.required]),\n      surname:new FormControl(\"\", [Validators.required]),\n      email:new FormControl(\"\", [Validators.required,Validators.email],),\n      contactNo: new FormControl(\"\", [Validators.required, Validators.maxLength(10), Validators.minLength(10)]),\n      department:new FormControl(\"\", [Validators.required]),\n    });\n  }\n\n  ngOnInit() {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    \n  }\n\n  get name(){\n    return this.empForm.get('name');\n  }\n  get surname(){\n    return this.empForm.get('surname');\n  }\n  get email(){\n    return this.empForm.get('email');\n  }\n  get contactNumber(){\n    return this.empForm.get('contactNo');\n  }\n  get department(){\n    return this.empForm.get('department');\n  }\n  onFormSubmit(){\n      if(this.empForm.valid){\n        this._empService.addEmployee(this.empForm.value).subscribe({\n          next: (val: any) => {\n          alert(\"Employee added successfully\"),\n          this.empForm.reset();\n          },\n        \n          error: (err: any) => {\n            console.error (err);\n          },\n          \n        });\n      \n    }\n\n\n  }\n\n\n  goToEmployeeList(){\n    this.router.navigate(['/'])\n  }\n\n\n\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}